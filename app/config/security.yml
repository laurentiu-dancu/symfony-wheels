# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        chain_provider:
                chain:
                    providers: [in_memory, user_db, email_db]
        in_memory:
            memory:
                users:
                    plebe:
                        password: $2y$12$SEpllWYDozyZLprTBCQhtulkMrer4ID9sRPXafHp8AiUgQKOmjYoy
                        roles: 'ROLE_USER'
                    admin:
                        password: $2y$12$iOWi8Uan90x0df3m.PZ1cO9OZ57mk5NHc1G6L2fBCvtOt.QHB9iGi
                        roles: 'ROLE_ADMIN'
        user_db:
            entity: { class: BlogBundle\Entity\User, property : 'username' }

        email_db:
            entity: { class: BlogBundle\Entity\User, property : 'email' }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            pattern: ^/
            form_login:
                login_path: /login
                check_path: /login_check
            logout:
                path: /logout
                target: /
            remember_me:
                secret:   '%secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
        BlogBundle\Entity\User:
            algorithm: bcrypt
    access_control:
        - { path: ^/article/create, role: [ ROLE_USER, ROLE_ADMIN ] }
        - { path: ^/article/delete, role: [ ROLE_ADMIN ] }
    role_hierarchy:
        ROLE_ADMIN:      [ ROLE_USER ]
        ROLE_SUPERADMIN: [ ROLE_ADMIN ]
